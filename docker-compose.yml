version: '3.7'

services:

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - retail-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - retail-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - retail-net

  kafka-producer-shelves:
    build:
      context: ./Kafka-components/kafka-producer-shelves
    container_name: kafka-producer-shelves
    volumes:
      - ./data:/app/data
    depends_on:
      - kafka
    networks:
      - retail-net

  # spark-master:
  #   image: bitnami/spark:latest
  #   container_name: spark-master
  #   environment:
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #   ports:
  #     - "7077:7077"
  #     - "8080:8080"
  #   networks:
  #     - retail-net

  # spark-worker:
  #   image: bitnami/spark:latest
  #   container_name: spark-worker
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - retail-net

  # spark-submit:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: spark-submit
  #   entrypoint: /bin/bash
  #   command: -c "useradd -m -u 1000 spark && export HOME=/tmp && export USER=spark && sleep infinity"
  #   user: root
  #   environment:
  #     - HOME=/tmp
  #     - USER=spark
  #     - SPARK_SUBMIT_OPTS=-Divy.cache.dir=/tmp/.ivy2 -Divy.home=/tmp/.ivy2
  #   volumes:
  #     - ./spark-apps:/opt/spark-apps
  #     - ./jars:/opt/spark-extra-jars
  #     - ./conf/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
  #   depends_on:
  #     - spark-master
  #     - spark-worker
  #   networks:
  #     - retail-net

#   minio:
#     image: minio/minio
#     container_name: minio
#     command: server /data --console-address ":9001"
#     environment:
#       - MINIO_ROOT_USER=minio
#       - MINIO_ROOT_PASSWORD=minio123
#     volumes:
#       - minio-data:/data
#     ports:
#       - "9000:9000"
#       - "9001:9001"
#     networks:
#       - retail-net

# networks:
#   retail-net:

# volumes:
#   minio-data:
#   kafka-data:
